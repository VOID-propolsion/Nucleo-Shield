ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB141:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include <stm32f446xx.h>
  22:Core/Src/main.c **** #include <stm32f4xx_hal_gpio.h>
  23:Core/Src/main.c **** #include <stm32f4xx_hal_qspi.h>
  24:Core/Src/main.c **** #include <stm32f4xx_hal_pcd.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** QSPI_HandleTypeDef hqspi;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_QUADSPI_Init(void);
  64:Core/Src/main.c **** static void MX_SPI1_Init(void);
  65:Core/Src/main.c **** static void MX_SPI2_Init(void);
  66:Core/Src/main.c **** static void MX_TIM3_Init(void);
  67:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****  * @brief  The application entry point.
  79:Core/Src/main.c ****  * @retval int
  80:Core/Src/main.c ****  */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 3


  89:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  90:Core/Src/main.c ****   HAL_Init();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Configure the system clock */
  97:Core/Src/main.c ****   SystemClock_Config();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Initialize all configured peripherals */
 104:Core/Src/main.c ****   MX_GPIO_Init();
 105:Core/Src/main.c ****   MX_QUADSPI_Init();
 106:Core/Src/main.c ****   MX_SPI1_Init();
 107:Core/Src/main.c ****   MX_SPI2_Init();
 108:Core/Src/main.c ****   MX_TIM3_Init();
 109:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END 2 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Infinite loop */
 115:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 116:Core/Src/main.c ****   while (1)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_1);
 119:Core/Src/main.c ****     // HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_15);
 120:Core/Src/main.c ****     HAL_Delay(1000);
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****  * @brief System Clock Configuration
 130:Core/Src/main.c ****  * @retval None
 131:Core/Src/main.c ****  */
 132:Core/Src/main.c **** void SystemClock_Config(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 138:Core/Src/main.c ****    */
 139:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 143:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 144:Core/Src/main.c ****    */
 145:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****    */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****  * @brief QUADSPI Initialization Function
 175:Core/Src/main.c ****  * @param None
 176:Core/Src/main.c ****  * @retval None
 177:Core/Src/main.c ****  */
 178:Core/Src/main.c **** static void MX_QUADSPI_Init(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 0 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 1 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 1 */
 188:Core/Src/main.c ****   /* QUADSPI parameter configuration*/
 189:Core/Src/main.c ****   hqspi.Instance = QUADSPI;
 190:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 255;
 191:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 1;
 192:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 193:Core/Src/main.c ****   hqspi.Init.FlashSize = 1;
 194:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 195:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 196:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 197:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 198:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 2 */
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 2 */
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 209:Core/Src/main.c ****  * @param None
 210:Core/Src/main.c ****  * @retval None
 211:Core/Src/main.c ****  */
 212:Core/Src/main.c **** static void MX_SPI1_Init(void)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 222:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 223:Core/Src/main.c ****   hspi1.Instance = SPI1;
 224:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 225:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 226:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 227:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 228:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 229:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 230:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 231:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 232:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 233:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 234:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 235:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****  * @brief SPI2 Initialization Function
 246:Core/Src/main.c ****  * @param None
 247:Core/Src/main.c ****  * @retval None
 248:Core/Src/main.c ****  */
 249:Core/Src/main.c **** static void MX_SPI2_Init(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 259:Core/Src/main.c ****   /* SPI2 parameter configuration*/
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 6


 260:Core/Src/main.c ****   hspi2.Instance = SPI2;
 261:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 262:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 263:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 264:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 265:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 266:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 267:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 268:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 269:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 270:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 271:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 272:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 279:Core/Src/main.c **** }
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** /**
 282:Core/Src/main.c ****  * @brief TIM3 Initialization Function
 283:Core/Src/main.c ****  * @param None
 284:Core/Src/main.c ****  * @retval None
 285:Core/Src/main.c ****  */
 286:Core/Src/main.c **** static void MX_TIM3_Init(void)
 287:Core/Src/main.c **** {
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 294:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 299:Core/Src/main.c ****   htim3.Instance = TIM3;
 300:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 301:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 302:Core/Src/main.c ****   htim3.Init.Period = 65535;
 303:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 304:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 305:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 311:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 312:Core/Src/main.c ****   {
 313:Core/Src/main.c ****     Error_Handler();
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 316:Core/Src/main.c ****   sConfigOC.Pulse = 0;
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 7


 317:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 318:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 319:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     Error_Handler();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 330:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 331:Core/Src/main.c **** }
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****  * @brief USB_OTG_FS Initialization Function
 335:Core/Src/main.c ****  * @param None
 336:Core/Src/main.c ****  * @retval None
 337:Core/Src/main.c ****  */
 338:Core/Src/main.c **** static void MX_USB_OTG_FS_PCD_Init(void)
 339:Core/Src/main.c **** {
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 348:Core/Src/main.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 349:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 350:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 351:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 352:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 353:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 354:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 355:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 356:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 357:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 358:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 365:Core/Src/main.c **** }
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /**
 368:Core/Src/main.c ****  * @brief GPIO Initialization Function
 369:Core/Src/main.c ****  * @param None
 370:Core/Src/main.c ****  * @retval None
 371:Core/Src/main.c ****  */
 372:Core/Src/main.c **** static void MX_GPIO_Init(void)
 373:Core/Src/main.c **** {
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 8


  28              		.loc 1 373 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              		.cfi_def_cfa_offset 64
 374:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 374 3 view .LVU1
  43              		.loc 1 374 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
  48 000e 0894     		str	r4, [sp, #32]
  49 0010 0994     		str	r4, [sp, #36]
 375:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 376:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 379:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 379 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 379 3 view .LVU4
  53 0012 0194     		str	r4, [sp, #4]
  54              		.loc 1 379 3 view .LVU5
  55 0014 414B     		ldr	r3, .L3
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c 1A63     		str	r2, [r3, #48]
  59              		.loc 1 379 3 view .LVU6
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
  62 0024 0192     		str	r2, [sp, #4]
  63              		.loc 1 379 3 view .LVU7
  64 0026 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 379 3 view .LVU8
 380:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  67              		.loc 1 380 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 380 3 view .LVU10
  70 0028 0294     		str	r4, [sp, #8]
  71              		.loc 1 380 3 view .LVU11
  72 002a 1A6B     		ldr	r2, [r3, #48]
  73 002c 42F08002 		orr	r2, r2, #128
  74 0030 1A63     		str	r2, [r3, #48]
  75              		.loc 1 380 3 view .LVU12
  76 0032 1A6B     		ldr	r2, [r3, #48]
  77 0034 02F08002 		and	r2, r2, #128
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 9


  78 0038 0292     		str	r2, [sp, #8]
  79              		.loc 1 380 3 view .LVU13
  80 003a 029A     		ldr	r2, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 380 3 view .LVU14
 381:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 381 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 381 3 view .LVU16
  86 003c 0394     		str	r4, [sp, #12]
  87              		.loc 1 381 3 view .LVU17
  88 003e 1A6B     		ldr	r2, [r3, #48]
  89 0040 42F00102 		orr	r2, r2, #1
  90 0044 1A63     		str	r2, [r3, #48]
  91              		.loc 1 381 3 view .LVU18
  92 0046 1A6B     		ldr	r2, [r3, #48]
  93 0048 02F00102 		and	r2, r2, #1
  94 004c 0392     		str	r2, [sp, #12]
  95              		.loc 1 381 3 view .LVU19
  96 004e 039A     		ldr	r2, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 381 3 view .LVU20
 382:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 382 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 382 3 view .LVU22
 102 0050 0494     		str	r4, [sp, #16]
 103              		.loc 1 382 3 view .LVU23
 104 0052 1A6B     		ldr	r2, [r3, #48]
 105 0054 42F00202 		orr	r2, r2, #2
 106 0058 1A63     		str	r2, [r3, #48]
 107              		.loc 1 382 3 view .LVU24
 108 005a 1B6B     		ldr	r3, [r3, #48]
 109 005c 03F00203 		and	r3, r3, #2
 110 0060 0493     		str	r3, [sp, #16]
 111              		.loc 1 382 3 view .LVU25
 112 0062 049B     		ldr	r3, [sp, #16]
 113              	.LBE7:
 114              		.loc 1 382 3 view .LVU26
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 385:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 115              		.loc 1 385 3 view .LVU27
 116 0064 2E4D     		ldr	r5, .L3+4
 117 0066 2246     		mov	r2, r4
 118 0068 0821     		movs	r1, #8
 119 006a 2846     		mov	r0, r5
 120 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL0:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 388:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1 | LD2_Pin | GPIO_PIN_10 | GPIO_PIN_15, GPIO_PIN_RESET);
 122              		.loc 1 388 3 view .LVU28
 123 0070 DFF8B480 		ldr	r8, .L3+12
 124 0074 2246     		mov	r2, r4
 125 0076 48F22241 		movw	r1, #33826
 126 007a 4046     		mov	r0, r8
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 10


 127 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 128              	.LVL1:
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 391:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7 | GPIO_PIN_8, GPIO_PIN_RESET);
 129              		.loc 1 391 3 view .LVU29
 130 0080 284E     		ldr	r6, .L3+8
 131 0082 2246     		mov	r2, r4
 132 0084 4FF4C071 		mov	r1, #384
 133 0088 3046     		mov	r0, r6
 134 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 135              	.LVL2:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 394:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 136              		.loc 1 394 3 view .LVU30
 137              		.loc 1 394 23 is_stmt 0 view .LVU31
 138 008e 4FF40053 		mov	r3, #8192
 139 0092 0593     		str	r3, [sp, #20]
 395:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 140              		.loc 1 395 3 is_stmt 1 view .LVU32
 141              		.loc 1 395 24 is_stmt 0 view .LVU33
 142 0094 4FF40413 		mov	r3, #2162688
 143 0098 0693     		str	r3, [sp, #24]
 396:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 396 3 is_stmt 1 view .LVU34
 145              		.loc 1 396 24 is_stmt 0 view .LVU35
 146 009a 0794     		str	r4, [sp, #28]
 397:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 147              		.loc 1 397 3 is_stmt 1 view .LVU36
 148 009c 05A9     		add	r1, sp, #20
 149 009e 2846     		mov	r0, r5
 150 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 151              	.LVL3:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /*Configure GPIO pin : PC3 */
 400:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 152              		.loc 1 400 3 view .LVU37
 153              		.loc 1 400 23 is_stmt 0 view .LVU38
 154 00a4 0823     		movs	r3, #8
 155 00a6 0593     		str	r3, [sp, #20]
 401:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 156              		.loc 1 401 3 is_stmt 1 view .LVU39
 157              		.loc 1 401 24 is_stmt 0 view .LVU40
 158 00a8 0127     		movs	r7, #1
 159 00aa 0697     		str	r7, [sp, #24]
 402:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 160              		.loc 1 402 3 is_stmt 1 view .LVU41
 161              		.loc 1 402 24 is_stmt 0 view .LVU42
 162 00ac 0794     		str	r4, [sp, #28]
 403:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 163              		.loc 1 403 3 is_stmt 1 view .LVU43
 164              		.loc 1 403 25 is_stmt 0 view .LVU44
 165 00ae 0894     		str	r4, [sp, #32]
 404:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 166              		.loc 1 404 3 is_stmt 1 view .LVU45
 167 00b0 05A9     		add	r1, sp, #20
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 11


 168 00b2 2846     		mov	r0, r5
 169 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL4:
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA8 PA9 */
 407:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_8 | GPIO_PIN_9;
 171              		.loc 1 407 3 view .LVU46
 172              		.loc 1 407 23 is_stmt 0 view .LVU47
 173 00b8 40F20133 		movw	r3, #769
 174 00bc 0593     		str	r3, [sp, #20]
 408:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 175              		.loc 1 408 3 is_stmt 1 view .LVU48
 176              		.loc 1 408 24 is_stmt 0 view .LVU49
 177 00be 0694     		str	r4, [sp, #24]
 409:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 409 3 is_stmt 1 view .LVU50
 179              		.loc 1 409 24 is_stmt 0 view .LVU51
 180 00c0 0794     		str	r4, [sp, #28]
 410:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 181              		.loc 1 410 3 is_stmt 1 view .LVU52
 182 00c2 05A9     		add	r1, sp, #20
 183 00c4 4046     		mov	r0, r8
 184 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL5:
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /*Configure GPIO pins : PA1 LD2_Pin PA10 PA15 */
 413:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1 | LD2_Pin | GPIO_PIN_10 | GPIO_PIN_15;
 186              		.loc 1 413 3 view .LVU53
 187              		.loc 1 413 23 is_stmt 0 view .LVU54
 188 00ca 48F22243 		movw	r3, #33826
 189 00ce 0593     		str	r3, [sp, #20]
 414:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 190              		.loc 1 414 3 is_stmt 1 view .LVU55
 191              		.loc 1 414 24 is_stmt 0 view .LVU56
 192 00d0 0697     		str	r7, [sp, #24]
 415:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 193              		.loc 1 415 3 is_stmt 1 view .LVU57
 194              		.loc 1 415 24 is_stmt 0 view .LVU58
 195 00d2 0794     		str	r4, [sp, #28]
 416:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 196              		.loc 1 416 3 is_stmt 1 view .LVU59
 197              		.loc 1 416 25 is_stmt 0 view .LVU60
 198 00d4 0894     		str	r4, [sp, #32]
 417:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 199              		.loc 1 417 3 is_stmt 1 view .LVU61
 200 00d6 05A9     		add	r1, sp, #20
 201 00d8 4046     		mov	r0, r8
 202 00da FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL6:
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /*Configure GPIO pins : PC4 PC5 PC6 PC7
 420:Core/Src/main.c ****                            PC8 PC11 PC12 */
 421:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_1
 204              		.loc 1 421 3 view .LVU62
 205              		.loc 1 421 23 is_stmt 0 view .LVU63
 206 00de 41F6F013 		movw	r3, #6640
 207 00e2 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 12


 422:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 208              		.loc 1 422 3 is_stmt 1 view .LVU64
 209              		.loc 1 422 24 is_stmt 0 view .LVU65
 210 00e4 0694     		str	r4, [sp, #24]
 423:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 211              		.loc 1 423 3 is_stmt 1 view .LVU66
 212              		.loc 1 423 24 is_stmt 0 view .LVU67
 213 00e6 0794     		str	r4, [sp, #28]
 424:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 214              		.loc 1 424 3 is_stmt 1 view .LVU68
 215 00e8 05A9     		add	r1, sp, #20
 216 00ea 2846     		mov	r0, r5
 217 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 218              	.LVL7:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB12 PB13 PB14
 427:Core/Src/main.c ****                            PB15 */
 428:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 219              		.loc 1 428 3 view .LVU69
 220              		.loc 1 428 23 is_stmt 0 view .LVU70
 221 00f0 4FF20103 		movw	r3, #61441
 222 00f4 0593     		str	r3, [sp, #20]
 429:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 223              		.loc 1 429 3 is_stmt 1 view .LVU71
 224              		.loc 1 429 24 is_stmt 0 view .LVU72
 225 00f6 0694     		str	r4, [sp, #24]
 430:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 430 3 is_stmt 1 view .LVU73
 227              		.loc 1 430 24 is_stmt 0 view .LVU74
 228 00f8 0794     		str	r4, [sp, #28]
 431:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 229              		.loc 1 431 3 is_stmt 1 view .LVU75
 230 00fa 05A9     		add	r1, sp, #20
 231 00fc 3046     		mov	r0, r6
 232 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL8:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /*Configure GPIO pins : PB7 PB8 */
 434:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7 | GPIO_PIN_8;
 234              		.loc 1 434 3 view .LVU76
 235              		.loc 1 434 23 is_stmt 0 view .LVU77
 236 0102 4FF4C073 		mov	r3, #384
 237 0106 0593     		str	r3, [sp, #20]
 435:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 238              		.loc 1 435 3 is_stmt 1 view .LVU78
 239              		.loc 1 435 24 is_stmt 0 view .LVU79
 240 0108 0697     		str	r7, [sp, #24]
 436:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 241              		.loc 1 436 3 is_stmt 1 view .LVU80
 242              		.loc 1 436 24 is_stmt 0 view .LVU81
 243 010a 0794     		str	r4, [sp, #28]
 437:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 244              		.loc 1 437 3 is_stmt 1 view .LVU82
 245              		.loc 1 437 25 is_stmt 0 view .LVU83
 246 010c 0894     		str	r4, [sp, #32]
 438:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 247              		.loc 1 438 3 is_stmt 1 view .LVU84
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 13


 248 010e 05A9     		add	r1, sp, #20
 249 0110 3046     		mov	r0, r6
 250 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 251              	.LVL9:
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 441:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 442:Core/Src/main.c **** }
 252              		.loc 1 442 1 is_stmt 0 view .LVU85
 253 0116 0AB0     		add	sp, sp, #40
 254              		.cfi_def_cfa_offset 24
 255              		@ sp needed
 256 0118 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 257              	.L4:
 258              		.align	2
 259              	.L3:
 260 011c 00380240 		.word	1073887232
 261 0120 00080240 		.word	1073874944
 262 0124 00040240 		.word	1073873920
 263 0128 00000240 		.word	1073872896
 264              		.cfi_endproc
 265              	.LFE141:
 267              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 268              		.align	1
 269              		.global	HAL_TIM_PeriodElapsedCallback
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	HAL_TIM_PeriodElapsedCallback:
 275              	.LVL10:
 276              	.LFB142:
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /* USER CODE END 4 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /**
 449:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
 450:Core/Src/main.c ****  * @note   This function is called  when TIM1 interrupt took place, inside
 451:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 452:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
 453:Core/Src/main.c ****  * @param  htim : TIM handle
 454:Core/Src/main.c ****  * @retval None
 455:Core/Src/main.c ****  */
 456:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 457:Core/Src/main.c **** {
 277              		.loc 1 457 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		.loc 1 457 1 is_stmt 0 view .LVU87
 282 0000 08B5     		push	{r3, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 458:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 459:Core/Src/main.c **** 
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 14


 460:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 461:Core/Src/main.c ****   if (htim->Instance == TIM1)
 286              		.loc 1 461 3 is_stmt 1 view .LVU88
 287              		.loc 1 461 11 is_stmt 0 view .LVU89
 288 0002 0268     		ldr	r2, [r0]
 289              		.loc 1 461 6 view .LVU90
 290 0004 034B     		ldr	r3, .L9
 291 0006 9A42     		cmp	r2, r3
 292 0008 00D0     		beq	.L8
 293              	.LVL11:
 294              	.L5:
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****     HAL_IncTick();
 464:Core/Src/main.c ****   }
 465:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 468:Core/Src/main.c **** }
 295              		.loc 1 468 1 view .LVU91
 296 000a 08BD     		pop	{r3, pc}
 297              	.LVL12:
 298              	.L8:
 463:Core/Src/main.c ****   }
 299              		.loc 1 463 5 is_stmt 1 view .LVU92
 300 000c FFF7FEFF 		bl	HAL_IncTick
 301              	.LVL13:
 302              		.loc 1 468 1 is_stmt 0 view .LVU93
 303 0010 FBE7     		b	.L5
 304              	.L10:
 305 0012 00BF     		.align	2
 306              	.L9:
 307 0014 00000140 		.word	1073807360
 308              		.cfi_endproc
 309              	.LFE142:
 311              		.section	.text.Error_Handler,"ax",%progbits
 312              		.align	1
 313              		.global	Error_Handler
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	Error_Handler:
 319              	.LFB143:
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** /**
 471:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 472:Core/Src/main.c ****  * @retval None
 473:Core/Src/main.c ****  */
 474:Core/Src/main.c **** void Error_Handler(void)
 475:Core/Src/main.c **** {
 320              		.loc 1 475 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ Volatile: function does not return.
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 476:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 477:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 15


 478:Core/Src/main.c ****   __disable_irq();
 326              		.loc 1 478 3 view .LVU95
 327              	.LBB8:
 328              	.LBI8:
 329              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 16


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 17


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 18


 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 19


 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 20


 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 21


 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 22


 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 23


 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 24


 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 25


 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 26


 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 27


 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 28


 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 29


 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 30


 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 31


 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 330              		.loc 2 960 27 view .LVU96
 331              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 32


 332              		.loc 2 962 3 view .LVU97
 333              		.syntax unified
 334              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 335 0000 72B6     		cpsid i
 336              	@ 0 "" 2
 337              		.thumb
 338              		.syntax unified
 339              	.L12:
 340              	.LBE9:
 341              	.LBE8:
 479:Core/Src/main.c ****   while (1)
 342              		.loc 1 479 3 view .LVU98
 480:Core/Src/main.c ****   {
 481:Core/Src/main.c ****   }
 343              		.loc 1 481 3 view .LVU99
 479:Core/Src/main.c ****   while (1)
 344              		.loc 1 479 9 view .LVU100
 345 0002 FEE7     		b	.L12
 346              		.cfi_endproc
 347              	.LFE143:
 349              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 350              		.align	1
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	MX_QUADSPI_Init:
 356              	.LFB136:
 179:Core/Src/main.c **** 
 357              		.loc 1 179 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 08B5     		push	{r3, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 3, -8
 364              		.cfi_offset 14, -4
 189:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 255;
 365              		.loc 1 189 3 view .LVU102
 189:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 255;
 366              		.loc 1 189 18 is_stmt 0 view .LVU103
 367 0002 0A48     		ldr	r0, .L17
 368 0004 0A4B     		ldr	r3, .L17+4
 369 0006 0360     		str	r3, [r0]
 190:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 1;
 370              		.loc 1 190 3 is_stmt 1 view .LVU104
 190:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 1;
 371              		.loc 1 190 29 is_stmt 0 view .LVU105
 372 0008 FF23     		movs	r3, #255
 373 000a 4360     		str	r3, [r0, #4]
 191:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 374              		.loc 1 191 3 is_stmt 1 view .LVU106
 191:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 375              		.loc 1 191 28 is_stmt 0 view .LVU107
 376 000c 0122     		movs	r2, #1
 377 000e 8260     		str	r2, [r0, #8]
 192:Core/Src/main.c ****   hqspi.Init.FlashSize = 1;
 378              		.loc 1 192 3 is_stmt 1 view .LVU108
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 33


 192:Core/Src/main.c ****   hqspi.Init.FlashSize = 1;
 379              		.loc 1 192 29 is_stmt 0 view .LVU109
 380 0010 0023     		movs	r3, #0
 381 0012 C360     		str	r3, [r0, #12]
 193:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 382              		.loc 1 193 3 is_stmt 1 view .LVU110
 193:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 383              		.loc 1 193 24 is_stmt 0 view .LVU111
 384 0014 0261     		str	r2, [r0, #16]
 194:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 385              		.loc 1 194 3 is_stmt 1 view .LVU112
 194:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 386              		.loc 1 194 33 is_stmt 0 view .LVU113
 387 0016 4361     		str	r3, [r0, #20]
 195:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 388              		.loc 1 195 3 is_stmt 1 view .LVU114
 195:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 389              		.loc 1 195 24 is_stmt 0 view .LVU115
 390 0018 8361     		str	r3, [r0, #24]
 196:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 391              		.loc 1 196 3 is_stmt 1 view .LVU116
 196:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 392              		.loc 1 196 22 is_stmt 0 view .LVU117
 393 001a C361     		str	r3, [r0, #28]
 197:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 394              		.loc 1 197 3 is_stmt 1 view .LVU118
 197:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 395              		.loc 1 197 24 is_stmt 0 view .LVU119
 396 001c 0362     		str	r3, [r0, #32]
 198:Core/Src/main.c ****   {
 397              		.loc 1 198 3 is_stmt 1 view .LVU120
 198:Core/Src/main.c ****   {
 398              		.loc 1 198 7 is_stmt 0 view .LVU121
 399 001e FFF7FEFF 		bl	HAL_QSPI_Init
 400              	.LVL14:
 198:Core/Src/main.c ****   {
 401              		.loc 1 198 6 discriminator 1 view .LVU122
 402 0022 00B9     		cbnz	r0, .L16
 205:Core/Src/main.c **** 
 403              		.loc 1 205 1 view .LVU123
 404 0024 08BD     		pop	{r3, pc}
 405              	.L16:
 200:Core/Src/main.c ****   }
 406              		.loc 1 200 5 is_stmt 1 view .LVU124
 407 0026 FFF7FEFF 		bl	Error_Handler
 408              	.LVL15:
 409              	.L18:
 410 002a 00BF     		.align	2
 411              	.L17:
 412 002c 00000000 		.word	hqspi
 413 0030 001000A0 		.word	-1610608640
 414              		.cfi_endproc
 415              	.LFE136:
 417              		.section	.text.MX_SPI1_Init,"ax",%progbits
 418              		.align	1
 419              		.syntax unified
 420              		.thumb
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 34


 421              		.thumb_func
 423              	MX_SPI1_Init:
 424              	.LFB137:
 213:Core/Src/main.c **** 
 425              		.loc 1 213 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 08B5     		push	{r3, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
 223:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 433              		.loc 1 223 3 view .LVU126
 223:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 434              		.loc 1 223 18 is_stmt 0 view .LVU127
 435 0002 0D48     		ldr	r0, .L23
 436 0004 0D4B     		ldr	r3, .L23+4
 437 0006 0360     		str	r3, [r0]
 224:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 438              		.loc 1 224 3 is_stmt 1 view .LVU128
 224:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 439              		.loc 1 224 19 is_stmt 0 view .LVU129
 440 0008 4FF48273 		mov	r3, #260
 441 000c 4360     		str	r3, [r0, #4]
 225:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 442              		.loc 1 225 3 is_stmt 1 view .LVU130
 225:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 443              		.loc 1 225 24 is_stmt 0 view .LVU131
 444 000e 0023     		movs	r3, #0
 445 0010 8360     		str	r3, [r0, #8]
 226:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 446              		.loc 1 226 3 is_stmt 1 view .LVU132
 226:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 447              		.loc 1 226 23 is_stmt 0 view .LVU133
 448 0012 C360     		str	r3, [r0, #12]
 227:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 449              		.loc 1 227 3 is_stmt 1 view .LVU134
 227:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 450              		.loc 1 227 26 is_stmt 0 view .LVU135
 451 0014 0361     		str	r3, [r0, #16]
 228:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 452              		.loc 1 228 3 is_stmt 1 view .LVU136
 228:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 453              		.loc 1 228 23 is_stmt 0 view .LVU137
 454 0016 4361     		str	r3, [r0, #20]
 229:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 455              		.loc 1 229 3 is_stmt 1 view .LVU138
 229:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 456              		.loc 1 229 18 is_stmt 0 view .LVU139
 457 0018 4FF48022 		mov	r2, #262144
 458 001c 8261     		str	r2, [r0, #24]
 230:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 459              		.loc 1 230 3 is_stmt 1 view .LVU140
 230:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 460              		.loc 1 230 32 is_stmt 0 view .LVU141
 461 001e C361     		str	r3, [r0, #28]
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 35


 231:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 462              		.loc 1 231 3 is_stmt 1 view .LVU142
 231:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 463              		.loc 1 231 23 is_stmt 0 view .LVU143
 464 0020 0362     		str	r3, [r0, #32]
 232:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 465              		.loc 1 232 3 is_stmt 1 view .LVU144
 232:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 466              		.loc 1 232 21 is_stmt 0 view .LVU145
 467 0022 4362     		str	r3, [r0, #36]
 233:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 468              		.loc 1 233 3 is_stmt 1 view .LVU146
 233:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 469              		.loc 1 233 29 is_stmt 0 view .LVU147
 470 0024 8362     		str	r3, [r0, #40]
 234:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 471              		.loc 1 234 3 is_stmt 1 view .LVU148
 234:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 472              		.loc 1 234 28 is_stmt 0 view .LVU149
 473 0026 0A23     		movs	r3, #10
 474 0028 C362     		str	r3, [r0, #44]
 235:Core/Src/main.c ****   {
 475              		.loc 1 235 3 is_stmt 1 view .LVU150
 235:Core/Src/main.c ****   {
 476              		.loc 1 235 7 is_stmt 0 view .LVU151
 477 002a FFF7FEFF 		bl	HAL_SPI_Init
 478              	.LVL16:
 235:Core/Src/main.c ****   {
 479              		.loc 1 235 6 discriminator 1 view .LVU152
 480 002e 00B9     		cbnz	r0, .L22
 242:Core/Src/main.c **** 
 481              		.loc 1 242 1 view .LVU153
 482 0030 08BD     		pop	{r3, pc}
 483              	.L22:
 237:Core/Src/main.c ****   }
 484              		.loc 1 237 5 is_stmt 1 view .LVU154
 485 0032 FFF7FEFF 		bl	Error_Handler
 486              	.LVL17:
 487              	.L24:
 488 0036 00BF     		.align	2
 489              	.L23:
 490 0038 00000000 		.word	hspi1
 491 003c 00300140 		.word	1073819648
 492              		.cfi_endproc
 493              	.LFE137:
 495              		.section	.text.MX_SPI2_Init,"ax",%progbits
 496              		.align	1
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 501              	MX_SPI2_Init:
 502              	.LFB138:
 250:Core/Src/main.c **** 
 503              		.loc 1 250 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 36


 507 0000 08B5     		push	{r3, lr}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
 260:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 511              		.loc 1 260 3 view .LVU156
 260:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 512              		.loc 1 260 18 is_stmt 0 view .LVU157
 513 0002 0D48     		ldr	r0, .L29
 514 0004 0D4B     		ldr	r3, .L29+4
 515 0006 0360     		str	r3, [r0]
 261:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 516              		.loc 1 261 3 is_stmt 1 view .LVU158
 261:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 517              		.loc 1 261 19 is_stmt 0 view .LVU159
 518 0008 4FF48273 		mov	r3, #260
 519 000c 4360     		str	r3, [r0, #4]
 262:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 520              		.loc 1 262 3 is_stmt 1 view .LVU160
 262:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 521              		.loc 1 262 24 is_stmt 0 view .LVU161
 522 000e 0023     		movs	r3, #0
 523 0010 8360     		str	r3, [r0, #8]
 263:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 524              		.loc 1 263 3 is_stmt 1 view .LVU162
 263:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 525              		.loc 1 263 23 is_stmt 0 view .LVU163
 526 0012 C360     		str	r3, [r0, #12]
 264:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 527              		.loc 1 264 3 is_stmt 1 view .LVU164
 264:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 528              		.loc 1 264 26 is_stmt 0 view .LVU165
 529 0014 0361     		str	r3, [r0, #16]
 265:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 530              		.loc 1 265 3 is_stmt 1 view .LVU166
 265:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 531              		.loc 1 265 23 is_stmt 0 view .LVU167
 532 0016 4361     		str	r3, [r0, #20]
 266:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 533              		.loc 1 266 3 is_stmt 1 view .LVU168
 266:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 534              		.loc 1 266 18 is_stmt 0 view .LVU169
 535 0018 4FF40072 		mov	r2, #512
 536 001c 8261     		str	r2, [r0, #24]
 267:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 537              		.loc 1 267 3 is_stmt 1 view .LVU170
 267:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 538              		.loc 1 267 32 is_stmt 0 view .LVU171
 539 001e C361     		str	r3, [r0, #28]
 268:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 540              		.loc 1 268 3 is_stmt 1 view .LVU172
 268:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 541              		.loc 1 268 23 is_stmt 0 view .LVU173
 542 0020 0362     		str	r3, [r0, #32]
 269:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 543              		.loc 1 269 3 is_stmt 1 view .LVU174
 269:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 37


 544              		.loc 1 269 21 is_stmt 0 view .LVU175
 545 0022 4362     		str	r3, [r0, #36]
 270:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 546              		.loc 1 270 3 is_stmt 1 view .LVU176
 270:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 547              		.loc 1 270 29 is_stmt 0 view .LVU177
 548 0024 8362     		str	r3, [r0, #40]
 271:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 549              		.loc 1 271 3 is_stmt 1 view .LVU178
 271:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 550              		.loc 1 271 28 is_stmt 0 view .LVU179
 551 0026 0A23     		movs	r3, #10
 552 0028 C362     		str	r3, [r0, #44]
 272:Core/Src/main.c ****   {
 553              		.loc 1 272 3 is_stmt 1 view .LVU180
 272:Core/Src/main.c ****   {
 554              		.loc 1 272 7 is_stmt 0 view .LVU181
 555 002a FFF7FEFF 		bl	HAL_SPI_Init
 556              	.LVL18:
 272:Core/Src/main.c ****   {
 557              		.loc 1 272 6 discriminator 1 view .LVU182
 558 002e 00B9     		cbnz	r0, .L28
 279:Core/Src/main.c **** 
 559              		.loc 1 279 1 view .LVU183
 560 0030 08BD     		pop	{r3, pc}
 561              	.L28:
 274:Core/Src/main.c ****   }
 562              		.loc 1 274 5 is_stmt 1 view .LVU184
 563 0032 FFF7FEFF 		bl	Error_Handler
 564              	.LVL19:
 565              	.L30:
 566 0036 00BF     		.align	2
 567              	.L29:
 568 0038 00000000 		.word	hspi2
 569 003c 00380040 		.word	1073756160
 570              		.cfi_endproc
 571              	.LFE138:
 573              		.section	.text.MX_TIM3_Init,"ax",%progbits
 574              		.align	1
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	MX_TIM3_Init:
 580              	.LFB139:
 287:Core/Src/main.c **** 
 581              		.loc 1 287 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 40
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585 0000 00B5     		push	{lr}
 586              		.cfi_def_cfa_offset 4
 587              		.cfi_offset 14, -4
 588 0002 8BB0     		sub	sp, sp, #44
 589              		.cfi_def_cfa_offset 48
 293:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 590              		.loc 1 293 3 view .LVU186
 293:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 38


 591              		.loc 1 293 27 is_stmt 0 view .LVU187
 592 0004 0023     		movs	r3, #0
 593 0006 0893     		str	r3, [sp, #32]
 594 0008 0993     		str	r3, [sp, #36]
 294:Core/Src/main.c **** 
 595              		.loc 1 294 3 is_stmt 1 view .LVU188
 294:Core/Src/main.c **** 
 596              		.loc 1 294 22 is_stmt 0 view .LVU189
 597 000a 0193     		str	r3, [sp, #4]
 598 000c 0293     		str	r3, [sp, #8]
 599 000e 0393     		str	r3, [sp, #12]
 600 0010 0493     		str	r3, [sp, #16]
 601 0012 0593     		str	r3, [sp, #20]
 602 0014 0693     		str	r3, [sp, #24]
 603 0016 0793     		str	r3, [sp, #28]
 299:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 604              		.loc 1 299 3 is_stmt 1 view .LVU190
 299:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 605              		.loc 1 299 18 is_stmt 0 view .LVU191
 606 0018 1A48     		ldr	r0, .L41
 607 001a 1B4A     		ldr	r2, .L41+4
 608 001c 0260     		str	r2, [r0]
 300:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 609              		.loc 1 300 3 is_stmt 1 view .LVU192
 300:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 610              		.loc 1 300 24 is_stmt 0 view .LVU193
 611 001e 4360     		str	r3, [r0, #4]
 301:Core/Src/main.c ****   htim3.Init.Period = 65535;
 612              		.loc 1 301 3 is_stmt 1 view .LVU194
 301:Core/Src/main.c ****   htim3.Init.Period = 65535;
 613              		.loc 1 301 26 is_stmt 0 view .LVU195
 614 0020 8360     		str	r3, [r0, #8]
 302:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 615              		.loc 1 302 3 is_stmt 1 view .LVU196
 302:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 616              		.loc 1 302 21 is_stmt 0 view .LVU197
 617 0022 4FF6FF72 		movw	r2, #65535
 618 0026 C260     		str	r2, [r0, #12]
 303:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 619              		.loc 1 303 3 is_stmt 1 view .LVU198
 303:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 620              		.loc 1 303 28 is_stmt 0 view .LVU199
 621 0028 0361     		str	r3, [r0, #16]
 304:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 622              		.loc 1 304 3 is_stmt 1 view .LVU200
 304:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 623              		.loc 1 304 32 is_stmt 0 view .LVU201
 624 002a 8361     		str	r3, [r0, #24]
 305:Core/Src/main.c ****   {
 625              		.loc 1 305 3 is_stmt 1 view .LVU202
 305:Core/Src/main.c ****   {
 626              		.loc 1 305 7 is_stmt 0 view .LVU203
 627 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 628              	.LVL20:
 305:Core/Src/main.c ****   {
 629              		.loc 1 305 6 discriminator 1 view .LVU204
 630 0030 F8B9     		cbnz	r0, .L37
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 39


 309:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 631              		.loc 1 309 3 is_stmt 1 view .LVU205
 309:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 632              		.loc 1 309 37 is_stmt 0 view .LVU206
 633 0032 0023     		movs	r3, #0
 634 0034 0893     		str	r3, [sp, #32]
 310:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 635              		.loc 1 310 3 is_stmt 1 view .LVU207
 310:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 636              		.loc 1 310 33 is_stmt 0 view .LVU208
 637 0036 0993     		str	r3, [sp, #36]
 311:Core/Src/main.c ****   {
 638              		.loc 1 311 3 is_stmt 1 view .LVU209
 311:Core/Src/main.c ****   {
 639              		.loc 1 311 7 is_stmt 0 view .LVU210
 640 0038 08A9     		add	r1, sp, #32
 641 003a 1248     		ldr	r0, .L41
 642 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 643              	.LVL21:
 311:Core/Src/main.c ****   {
 644              		.loc 1 311 6 discriminator 1 view .LVU211
 645 0040 C8B9     		cbnz	r0, .L38
 315:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 646              		.loc 1 315 3 is_stmt 1 view .LVU212
 315:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 647              		.loc 1 315 20 is_stmt 0 view .LVU213
 648 0042 6023     		movs	r3, #96
 649 0044 0193     		str	r3, [sp, #4]
 316:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 650              		.loc 1 316 3 is_stmt 1 view .LVU214
 316:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 651              		.loc 1 316 19 is_stmt 0 view .LVU215
 652 0046 0022     		movs	r2, #0
 653 0048 0292     		str	r2, [sp, #8]
 317:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 654              		.loc 1 317 3 is_stmt 1 view .LVU216
 317:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 655              		.loc 1 317 24 is_stmt 0 view .LVU217
 656 004a 0392     		str	r2, [sp, #12]
 318:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 657              		.loc 1 318 3 is_stmt 1 view .LVU218
 318:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 658              		.loc 1 318 24 is_stmt 0 view .LVU219
 659 004c 0592     		str	r2, [sp, #20]
 319:Core/Src/main.c ****   {
 660              		.loc 1 319 3 is_stmt 1 view .LVU220
 319:Core/Src/main.c ****   {
 661              		.loc 1 319 7 is_stmt 0 view .LVU221
 662 004e 01A9     		add	r1, sp, #4
 663 0050 0C48     		ldr	r0, .L41
 664 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 665              	.LVL22:
 319:Core/Src/main.c ****   {
 666              		.loc 1 319 6 discriminator 1 view .LVU222
 667 0056 80B9     		cbnz	r0, .L39
 323:Core/Src/main.c ****   {
 668              		.loc 1 323 3 is_stmt 1 view .LVU223
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 40


 323:Core/Src/main.c ****   {
 669              		.loc 1 323 7 is_stmt 0 view .LVU224
 670 0058 0422     		movs	r2, #4
 671 005a 0DEB0201 		add	r1, sp, r2
 672 005e 0948     		ldr	r0, .L41
 673 0060 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 674              	.LVL23:
 323:Core/Src/main.c ****   {
 675              		.loc 1 323 6 discriminator 1 view .LVU225
 676 0064 58B9     		cbnz	r0, .L40
 330:Core/Src/main.c **** }
 677              		.loc 1 330 3 is_stmt 1 view .LVU226
 678 0066 0748     		ldr	r0, .L41
 679 0068 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 680              	.LVL24:
 331:Core/Src/main.c **** 
 681              		.loc 1 331 1 is_stmt 0 view .LVU227
 682 006c 0BB0     		add	sp, sp, #44
 683              		.cfi_remember_state
 684              		.cfi_def_cfa_offset 4
 685              		@ sp needed
 686 006e 5DF804FB 		ldr	pc, [sp], #4
 687              	.L37:
 688              		.cfi_restore_state
 307:Core/Src/main.c ****   }
 689              		.loc 1 307 5 is_stmt 1 view .LVU228
 690 0072 FFF7FEFF 		bl	Error_Handler
 691              	.LVL25:
 692              	.L38:
 313:Core/Src/main.c ****   }
 693              		.loc 1 313 5 view .LVU229
 694 0076 FFF7FEFF 		bl	Error_Handler
 695              	.LVL26:
 696              	.L39:
 321:Core/Src/main.c ****   }
 697              		.loc 1 321 5 view .LVU230
 698 007a FFF7FEFF 		bl	Error_Handler
 699              	.LVL27:
 700              	.L40:
 325:Core/Src/main.c ****   }
 701              		.loc 1 325 5 view .LVU231
 702 007e FFF7FEFF 		bl	Error_Handler
 703              	.LVL28:
 704              	.L42:
 705 0082 00BF     		.align	2
 706              	.L41:
 707 0084 00000000 		.word	htim3
 708 0088 00040040 		.word	1073742848
 709              		.cfi_endproc
 710              	.LFE139:
 712              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 713              		.align	1
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 718              	MX_USB_OTG_FS_PCD_Init:
 719              	.LFB140:
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 41


 339:Core/Src/main.c **** 
 720              		.loc 1 339 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 08B5     		push	{r3, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 3, -8
 727              		.cfi_offset 14, -4
 348:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 728              		.loc 1 348 3 view .LVU233
 348:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 729              		.loc 1 348 28 is_stmt 0 view .LVU234
 730 0002 0B48     		ldr	r0, .L47
 731 0004 4FF0A043 		mov	r3, #1342177280
 732 0008 0360     		str	r3, [r0]
 349:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 733              		.loc 1 349 3 is_stmt 1 view .LVU235
 349:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 734              		.loc 1 349 38 is_stmt 0 view .LVU236
 735 000a 0623     		movs	r3, #6
 736 000c 0371     		strb	r3, [r0, #4]
 350:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 737              		.loc 1 350 3 is_stmt 1 view .LVU237
 350:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 738              		.loc 1 350 30 is_stmt 0 view .LVU238
 739 000e 0222     		movs	r2, #2
 740 0010 C271     		strb	r2, [r0, #7]
 351:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 741              		.loc 1 351 3 is_stmt 1 view .LVU239
 351:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 742              		.loc 1 351 35 is_stmt 0 view .LVU240
 743 0012 0023     		movs	r3, #0
 744 0014 8371     		strb	r3, [r0, #6]
 352:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 745              		.loc 1 352 3 is_stmt 1 view .LVU241
 352:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 746              		.loc 1 352 35 is_stmt 0 view .LVU242
 747 0016 4272     		strb	r2, [r0, #9]
 353:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 748              		.loc 1 353 3 is_stmt 1 view .LVU243
 353:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 749              		.loc 1 353 35 is_stmt 0 view .LVU244
 750 0018 8372     		strb	r3, [r0, #10]
 354:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 751              		.loc 1 354 3 is_stmt 1 view .LVU245
 354:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 752              		.loc 1 354 41 is_stmt 0 view .LVU246
 753 001a C372     		strb	r3, [r0, #11]
 355:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 754              		.loc 1 355 3 is_stmt 1 view .LVU247
 355:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 755              		.loc 1 355 35 is_stmt 0 view .LVU248
 756 001c 0373     		strb	r3, [r0, #12]
 356:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 757              		.loc 1 356 3 is_stmt 1 view .LVU249
 356:Core/Src/main.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 42


 758              		.loc 1 356 44 is_stmt 0 view .LVU250
 759 001e 8373     		strb	r3, [r0, #14]
 357:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 760              		.loc 1 357 3 is_stmt 1 view .LVU251
 357:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 761              		.loc 1 357 42 is_stmt 0 view .LVU252
 762 0020 C373     		strb	r3, [r0, #15]
 358:Core/Src/main.c ****   {
 763              		.loc 1 358 3 is_stmt 1 view .LVU253
 358:Core/Src/main.c ****   {
 764              		.loc 1 358 7 is_stmt 0 view .LVU254
 765 0022 FFF7FEFF 		bl	HAL_PCD_Init
 766              	.LVL29:
 358:Core/Src/main.c ****   {
 767              		.loc 1 358 6 discriminator 1 view .LVU255
 768 0026 00B9     		cbnz	r0, .L46
 365:Core/Src/main.c **** 
 769              		.loc 1 365 1 view .LVU256
 770 0028 08BD     		pop	{r3, pc}
 771              	.L46:
 360:Core/Src/main.c ****   }
 772              		.loc 1 360 5 is_stmt 1 view .LVU257
 773 002a FFF7FEFF 		bl	Error_Handler
 774              	.LVL30:
 775              	.L48:
 776 002e 00BF     		.align	2
 777              	.L47:
 778 0030 00000000 		.word	hpcd_USB_OTG_FS
 779              		.cfi_endproc
 780              	.LFE140:
 782              		.section	.text.SystemClock_Config,"ax",%progbits
 783              		.align	1
 784              		.global	SystemClock_Config
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	SystemClock_Config:
 790              	.LFB135:
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 791              		.loc 1 133 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 80
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795 0000 00B5     		push	{lr}
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 14, -4
 798 0002 95B0     		sub	sp, sp, #84
 799              		.cfi_def_cfa_offset 88
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800              		.loc 1 134 3 view .LVU259
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801              		.loc 1 134 22 is_stmt 0 view .LVU260
 802 0004 3422     		movs	r2, #52
 803 0006 0021     		movs	r1, #0
 804 0008 07A8     		add	r0, sp, #28
 805 000a FFF7FEFF 		bl	memset
 806              	.LVL31:
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 43


 135:Core/Src/main.c **** 
 807              		.loc 1 135 3 is_stmt 1 view .LVU261
 135:Core/Src/main.c **** 
 808              		.loc 1 135 22 is_stmt 0 view .LVU262
 809 000e 0023     		movs	r3, #0
 810 0010 0293     		str	r3, [sp, #8]
 811 0012 0393     		str	r3, [sp, #12]
 812 0014 0493     		str	r3, [sp, #16]
 813 0016 0593     		str	r3, [sp, #20]
 814 0018 0693     		str	r3, [sp, #24]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 815              		.loc 1 139 3 is_stmt 1 view .LVU263
 816              	.LBB10:
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 817              		.loc 1 139 3 view .LVU264
 818 001a 0093     		str	r3, [sp]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 819              		.loc 1 139 3 view .LVU265
 820 001c 204A     		ldr	r2, .L55
 821 001e 116C     		ldr	r1, [r2, #64]
 822 0020 41F08051 		orr	r1, r1, #268435456
 823 0024 1164     		str	r1, [r2, #64]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 824              		.loc 1 139 3 view .LVU266
 825 0026 126C     		ldr	r2, [r2, #64]
 826 0028 02F08052 		and	r2, r2, #268435456
 827 002c 0092     		str	r2, [sp]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 828              		.loc 1 139 3 view .LVU267
 829 002e 009A     		ldr	r2, [sp]
 830              	.LBE10:
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 831              		.loc 1 139 3 view .LVU268
 140:Core/Src/main.c **** 
 832              		.loc 1 140 3 view .LVU269
 833              	.LBB11:
 140:Core/Src/main.c **** 
 834              		.loc 1 140 3 view .LVU270
 835 0030 0193     		str	r3, [sp, #4]
 140:Core/Src/main.c **** 
 836              		.loc 1 140 3 view .LVU271
 837 0032 1C4A     		ldr	r2, .L55+4
 838 0034 1368     		ldr	r3, [r2]
 839 0036 23F44043 		bic	r3, r3, #49152
 840 003a 43F48043 		orr	r3, r3, #16384
 841 003e 1360     		str	r3, [r2]
 140:Core/Src/main.c **** 
 842              		.loc 1 140 3 view .LVU272
 843 0040 1368     		ldr	r3, [r2]
 844 0042 03F44043 		and	r3, r3, #49152
 845 0046 0193     		str	r3, [sp, #4]
 140:Core/Src/main.c **** 
 846              		.loc 1 140 3 view .LVU273
 847 0048 019B     		ldr	r3, [sp, #4]
 848              	.LBE11:
 140:Core/Src/main.c **** 
 849              		.loc 1 140 3 view .LVU274
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 44


 145:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 850              		.loc 1 145 3 view .LVU275
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 851              		.loc 1 145 36 is_stmt 0 view .LVU276
 852 004a 0123     		movs	r3, #1
 853 004c 0793     		str	r3, [sp, #28]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 854              		.loc 1 146 3 is_stmt 1 view .LVU277
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 855              		.loc 1 146 30 is_stmt 0 view .LVU278
 856 004e 4FF48033 		mov	r3, #65536
 857 0052 0893     		str	r3, [sp, #32]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 858              		.loc 1 147 3 is_stmt 1 view .LVU279
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 859              		.loc 1 147 34 is_stmt 0 view .LVU280
 860 0054 0223     		movs	r3, #2
 861 0056 0D93     		str	r3, [sp, #52]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 862              		.loc 1 148 3 is_stmt 1 view .LVU281
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 863              		.loc 1 148 35 is_stmt 0 view .LVU282
 864 0058 4FF48002 		mov	r2, #4194304
 865 005c 0E92     		str	r2, [sp, #56]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 866              		.loc 1 149 3 is_stmt 1 view .LVU283
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 867              		.loc 1 149 30 is_stmt 0 view .LVU284
 868 005e 0422     		movs	r2, #4
 869 0060 0F92     		str	r2, [sp, #60]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 870              		.loc 1 150 3 is_stmt 1 view .LVU285
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 871              		.loc 1 150 30 is_stmt 0 view .LVU286
 872 0062 4822     		movs	r2, #72
 873 0064 1092     		str	r2, [sp, #64]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 874              		.loc 1 151 3 is_stmt 1 view .LVU287
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 875              		.loc 1 151 30 is_stmt 0 view .LVU288
 876 0066 1193     		str	r3, [sp, #68]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 877              		.loc 1 152 3 is_stmt 1 view .LVU289
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 878              		.loc 1 152 30 is_stmt 0 view .LVU290
 879 0068 0322     		movs	r2, #3
 880 006a 1292     		str	r2, [sp, #72]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 881              		.loc 1 153 3 is_stmt 1 view .LVU291
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 882              		.loc 1 153 30 is_stmt 0 view .LVU292
 883 006c 1393     		str	r3, [sp, #76]
 154:Core/Src/main.c ****   {
 884              		.loc 1 154 3 is_stmt 1 view .LVU293
 154:Core/Src/main.c ****   {
 885              		.loc 1 154 7 is_stmt 0 view .LVU294
 886 006e 07A8     		add	r0, sp, #28
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 45


 887 0070 FFF7FEFF 		bl	HAL_RCC_OscConfig
 888              	.LVL32:
 154:Core/Src/main.c ****   {
 889              		.loc 1 154 6 discriminator 1 view .LVU295
 890 0074 80B9     		cbnz	r0, .L53
 161:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 891              		.loc 1 161 3 is_stmt 1 view .LVU296
 161:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 892              		.loc 1 161 31 is_stmt 0 view .LVU297
 893 0076 0F23     		movs	r3, #15
 894 0078 0293     		str	r3, [sp, #8]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 895              		.loc 1 162 3 is_stmt 1 view .LVU298
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 896              		.loc 1 162 34 is_stmt 0 view .LVU299
 897 007a 0221     		movs	r1, #2
 898 007c 0391     		str	r1, [sp, #12]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 899              		.loc 1 163 3 is_stmt 1 view .LVU300
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 900              		.loc 1 163 35 is_stmt 0 view .LVU301
 901 007e 0023     		movs	r3, #0
 902 0080 0493     		str	r3, [sp, #16]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 903              		.loc 1 164 3 is_stmt 1 view .LVU302
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 904              		.loc 1 164 36 is_stmt 0 view .LVU303
 905 0082 4FF48052 		mov	r2, #4096
 906 0086 0592     		str	r2, [sp, #20]
 165:Core/Src/main.c **** 
 907              		.loc 1 165 3 is_stmt 1 view .LVU304
 165:Core/Src/main.c **** 
 908              		.loc 1 165 36 is_stmt 0 view .LVU305
 909 0088 0693     		str	r3, [sp, #24]
 167:Core/Src/main.c ****   {
 910              		.loc 1 167 3 is_stmt 1 view .LVU306
 167:Core/Src/main.c ****   {
 911              		.loc 1 167 7 is_stmt 0 view .LVU307
 912 008a 02A8     		add	r0, sp, #8
 913 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 914              	.LVL33:
 167:Core/Src/main.c ****   {
 915              		.loc 1 167 6 discriminator 1 view .LVU308
 916 0090 20B9     		cbnz	r0, .L54
 171:Core/Src/main.c **** 
 917              		.loc 1 171 1 view .LVU309
 918 0092 15B0     		add	sp, sp, #84
 919              		.cfi_remember_state
 920              		.cfi_def_cfa_offset 4
 921              		@ sp needed
 922 0094 5DF804FB 		ldr	pc, [sp], #4
 923              	.L53:
 924              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 925              		.loc 1 156 5 is_stmt 1 view .LVU310
 926 0098 FFF7FEFF 		bl	Error_Handler
 927              	.LVL34:
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 46


 928              	.L54:
 169:Core/Src/main.c ****   }
 929              		.loc 1 169 5 view .LVU311
 930 009c FFF7FEFF 		bl	Error_Handler
 931              	.LVL35:
 932              	.L56:
 933              		.align	2
 934              	.L55:
 935 00a0 00380240 		.word	1073887232
 936 00a4 00700040 		.word	1073770496
 937              		.cfi_endproc
 938              	.LFE135:
 940              		.section	.text.main,"ax",%progbits
 941              		.align	1
 942              		.global	main
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 947              	main:
 948              	.LFB134:
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 949              		.loc 1 82 1 view -0
 950              		.cfi_startproc
 951              		@ Volatile: function does not return.
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954 0000 08B5     		push	{r3, lr}
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 3, -8
 957              		.cfi_offset 14, -4
  90:Core/Src/main.c **** 
 958              		.loc 1 90 3 view .LVU313
 959 0002 FFF7FEFF 		bl	HAL_Init
 960              	.LVL36:
  97:Core/Src/main.c **** 
 961              		.loc 1 97 3 view .LVU314
 962 0006 FFF7FEFF 		bl	SystemClock_Config
 963              	.LVL37:
 104:Core/Src/main.c ****   MX_QUADSPI_Init();
 964              		.loc 1 104 3 view .LVU315
 965 000a FFF7FEFF 		bl	MX_GPIO_Init
 966              	.LVL38:
 105:Core/Src/main.c ****   MX_SPI1_Init();
 967              		.loc 1 105 3 view .LVU316
 968 000e FFF7FEFF 		bl	MX_QUADSPI_Init
 969              	.LVL39:
 106:Core/Src/main.c ****   MX_SPI2_Init();
 970              		.loc 1 106 3 view .LVU317
 971 0012 FFF7FEFF 		bl	MX_SPI1_Init
 972              	.LVL40:
 107:Core/Src/main.c ****   MX_TIM3_Init();
 973              		.loc 1 107 3 view .LVU318
 974 0016 FFF7FEFF 		bl	MX_SPI2_Init
 975              	.LVL41:
 108:Core/Src/main.c ****   MX_USB_OTG_FS_PCD_Init();
 976              		.loc 1 108 3 view .LVU319
 977 001a FFF7FEFF 		bl	MX_TIM3_Init
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 47


 978              	.LVL42:
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 979              		.loc 1 109 3 view .LVU320
 980 001e FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 981              	.LVL43:
 982              	.L58:
 116:Core/Src/main.c ****   {
 983              		.loc 1 116 3 view .LVU321
 118:Core/Src/main.c ****     // HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_15);
 984              		.loc 1 118 5 view .LVU322
 985 0022 0221     		movs	r1, #2
 986 0024 0348     		ldr	r0, .L60
 987 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 988              	.LVL44:
 120:Core/Src/main.c ****     /* USER CODE END WHILE */
 989              		.loc 1 120 5 discriminator 1 view .LVU323
 990 002a 4FF47A70 		mov	r0, #1000
 991 002e FFF7FEFF 		bl	HAL_Delay
 992              	.LVL45:
 116:Core/Src/main.c ****   {
 993              		.loc 1 116 9 view .LVU324
 994 0032 F6E7     		b	.L58
 995              	.L61:
 996              		.align	2
 997              	.L60:
 998 0034 00000240 		.word	1073872896
 999              		.cfi_endproc
 1000              	.LFE134:
 1002              		.global	hpcd_USB_OTG_FS
 1003              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
 1004              		.align	2
 1007              	hpcd_USB_OTG_FS:
 1008 0000 00000000 		.space	1252
 1008      00000000 
 1008      00000000 
 1008      00000000 
 1008      00000000 
 1009              		.global	htim3
 1010              		.section	.bss.htim3,"aw",%nobits
 1011              		.align	2
 1014              	htim3:
 1015 0000 00000000 		.space	72
 1015      00000000 
 1015      00000000 
 1015      00000000 
 1015      00000000 
 1016              		.global	hspi2
 1017              		.section	.bss.hspi2,"aw",%nobits
 1018              		.align	2
 1021              	hspi2:
 1022 0000 00000000 		.space	88
 1022      00000000 
 1022      00000000 
 1022      00000000 
 1022      00000000 
 1023              		.global	hspi1
 1024              		.section	.bss.hspi1,"aw",%nobits
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 48


 1025              		.align	2
 1028              	hspi1:
 1029 0000 00000000 		.space	88
 1029      00000000 
 1029      00000000 
 1029      00000000 
 1029      00000000 
 1030              		.global	hqspi
 1031              		.section	.bss.hqspi,"aw",%nobits
 1032              		.align	2
 1035              	hqspi:
 1036 0000 00000000 		.space	76
 1036      00000000 
 1036      00000000 
 1036      00000000 
 1036      00000000 
 1037              		.text
 1038              	.Letext0:
 1039              		.file 3 "C:/Users/danis/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1040              		.file 4 "C:/Users/danis/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 1041              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1042              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1043              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1044              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1045              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1046              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1047              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1048              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1049              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1050              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 1051              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 1052              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_qspi.h"
 1053              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1054              		.file 18 "Core/Inc/main.h"
 1055              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1056              		.file 20 "<built-in>"
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:260    .text.MX_GPIO_Init:0000011c $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:268    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:274    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:307    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:312    .text.Error_Handler:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:318    .text.Error_Handler:00000000 Error_Handler
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:350    .text.MX_QUADSPI_Init:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:355    .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:412    .text.MX_QUADSPI_Init:0000002c $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1035   .bss.hqspi:00000000 hqspi
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:418    .text.MX_SPI1_Init:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:423    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:490    .text.MX_SPI1_Init:00000038 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1028   .bss.hspi1:00000000 hspi1
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:496    .text.MX_SPI2_Init:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:501    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:568    .text.MX_SPI2_Init:00000038 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1021   .bss.hspi2:00000000 hspi2
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:574    .text.MX_TIM3_Init:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:579    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:707    .text.MX_TIM3_Init:00000084 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1014   .bss.htim3:00000000 htim3
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:713    .text.MX_USB_OTG_FS_PCD_Init:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:718    .text.MX_USB_OTG_FS_PCD_Init:00000000 MX_USB_OTG_FS_PCD_Init
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:778    .text.MX_USB_OTG_FS_PCD_Init:00000030 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1007   .bss.hpcd_USB_OTG_FS:00000000 hpcd_USB_OTG_FS
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:783    .text.SystemClock_Config:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:789    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:935    .text.SystemClock_Config:000000a0 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:941    .text.main:00000000 $t
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:947    .text.main:00000000 main
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:998    .text.main:00000034 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1004   .bss.hpcd_USB_OTG_FS:00000000 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1011   .bss.htim3:00000000 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1018   .bss.hspi2:00000000 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1025   .bss.hspi1:00000000 $d
C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s:1032   .bss.hqspi:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_IncTick
HAL_QSPI_Init
HAL_SPI_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_PCD_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ARM GAS  C:\Users\danis\AppData\Local\Temp\ccdXTpBR.s 			page 50


HAL_GPIO_TogglePin
HAL_Delay
